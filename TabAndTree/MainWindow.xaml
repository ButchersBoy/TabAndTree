<Window x:Class="TabAndTree.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:TabAndTree"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
       
        Title="MainWindow" Height="350" Width="525">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    <Window.Resources>

       
        <HierarchicalDataTemplate DataType="{x:Type local:InfoElement}"
                                  ItemsSource="{Binding Path=Children}">
            <Border HorizontalAlignment="Stretch" Background="Transparent">
             
                    <TextBlock Grid.Column="0" Text="{Binding Title}"
                               TextTrimming="CharacterEllipsis"
                               />
                
            </Border>
        </HierarchicalDataTemplate>

        <!--This Style is MaterialDesign for V2.1.0 and use it to overwrite the TreeViewItem style-->
        <Style x:Key="cusMaterialDesignTreeViewItem" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource MaterialDesignTreeViewItemFocusVisual}"/>
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Normal"/>
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                                             To="0.1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.6"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.18" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Unselected"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0" To="Expanded">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"
                                                             To="1" Duration="0:0:0.3"/>
                                                <DoubleAnimation Storyboard.TargetProperty="Tag" Storyboard.TargetName="ItemsPanel"
                                                             To="1" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition GeneratedDuration="0" To="Collapsed">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"
                                                             To="0" Duration="0:0:0.3"/>
                                                <DoubleAnimation Storyboard.TargetProperty="Tag" Storyboard.TargetName="ItemsPanel"
                                                             To="0" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"
                                                             To="1" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Tag" Storyboard.TargetName="ItemsPanel"
                                                             To="1" Duration="0"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"
                                                             To="0" Duration="0"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Tag" Storyboard.TargetName="ItemsPanel"
                                                             To="0" Duration="0"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource MaterialDesignExpandCollapseToggleStyle}"
                                      Foreground="{TemplateBinding Foreground}"
                                      Margin="8 0 8 0"
                                      VerticalAlignment="Center"
                                              />

                            <Border x:Name="MouseOverBorder"
                                Grid.Column="1" Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Border x:Name="SelectedBorder"
                                Grid.Column="1" Grid.ColumnSpan="2"
                                IsHitTestVisible="False"
                                Opacity="0"
                                Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Grid Grid.Column="1" Grid.ColumnSpan="2" x:Name="ContentGrid" Background="Transparent">
                                <materialDesign:Ripple Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                        Focusable="False"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header"/>
                                </materialDesign:Ripple>
                            </Grid>

                            <StackPanel Grid.Column="1" Grid.Row="1"
                                    x:Name="ItemsPanel"
                                    Margin="-16 0 0 0"
                                    Grid.ColumnSpan="2">
                                <StackPanel.Tag> <!-- i think the stackpanel is missing default value -->
                                    <sys:Double>0.0</sys:Double>
                                </StackPanel.Tag>
                                <StackPanel.Height>
                                    <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                        <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                        <Binding RelativeSource="{RelativeSource Self}" Path="Tag"/>
                                    </MultiBinding>
                                </StackPanel.Height>
                                <ItemsPresenter x:Name="ItemsHost"
                                            VerticalAlignment="Top"
                                            Opacity="0"
                                            Visibility="Collapsed"/>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value=".56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="1">
            <TabItem Header="Fruits">
                <TreeView ItemsSource="{Binding Elements}">

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=Twoway}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=Twoway}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </TreeView.ItemContainerStyle>

                
                </TreeView>

            </TabItem>
            <TabItem Header="OS">
                <TreeView ItemsSource="{Binding Elements}">

                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <!-- if don't use this style for v2.1.0, it will be System.InvalidOperationException -->
                        <!--<Style TargetType="TreeViewItem" BasedOn="{StaticResource cusMaterialDesignTreeViewItem}">-->
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=Twoway}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=Twoway}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </TreeView.ItemContainerStyle>


                </TreeView>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
